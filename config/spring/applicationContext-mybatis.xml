<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"    
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:context="http://www.springframework.org/schema/context"    
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:tx="http://www.springframework.org/schema/tx"    
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">  

       <!--配置数据源(Proxool数据库连接池) -->  
  	   <bean id="mybatisDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		   <property name="jndiName">
			   <value>/frameWork</value>
		   </property>
	   </bean>

       <!-- 配置mybatis框架:sqlSessionFactory -->  
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
           <property name="dataSource" ref="mybatisDataSource" />  
           <!--mybatis配置文件-->
           <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
           <!--映射资源配置文件-->
           <property name="mapperLocations" value="classpath*:com/framework/persistent/**/*.xml" />  
       </bean>  
  
       <!-- 配置mybatis框架:sqlSessionTemplate -->  
       <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
           <constructor-arg index="0" ref="sqlSessionFactory" />  
       </bean>  
        
       	<!--数据源事务统一控制 -->
		<bean id="mybatisTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="mybatisDataSource" />
		</bean>
	
		<!--事务配置：方法级别拦截-->
       <tx:advice id="mybatisAdvice" transaction-manager="mybatisTransactionManager">
           <tx:attributes>
               <!-- 只读事务 -->
               <tx:method name="find*" read-only="true" rollback-for="Exception"/>
               <!-- 传播事务 -->
               <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
               <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
               <tx:method name="upate*" propagation="REQUIRED" rollback-for="Exception"/>
           </tx:attributes>
        </tx:advice>

       <!--事务配置：类级别拦截-->
       <!-- 统一在服务层(Service)拦截 -->
       <aop:config>
           <aop:pointcut id="mybatisPointCut" expression="execution(* com.framework.service.*.*(..))"/>
           <aop:advisor advice-ref="mybatisAdvice" pointcut-ref="mybatisPointCut"/>
       </aop:config>
</beans>  